<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.virhuiai</groupId>
  <artifactId>Csh_Log</artifactId>
  <version>1.1</version>

  <name>Csh_Log</name>
  <!-- FIXME change it to the project's website -->
<!--  <url>http://www.example.com</url>-->

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13.1</version>
      <scope>test</scope>
    </dependency>

    <!--     Apache Commons Logging API-->
    <!--  Apache Commons Logging 是一个通用的日志接口库，它抽象了具体的日志实现库，如 Log4j、SLF4J 或 Java Util Logging (JUL)。Commons Logging 本身不提供日志记录的实现，而是通过桥接到这些具体的日志库来实际记录日志。  -->
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>1.2</version>
    </dependency>
    <!-- Log4j2 API -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.17.2</version>
    </dependency>
    <!-- Log4j2 Core -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.17.2</version>
    </dependency>

    <!-- 这里添加了 log4j-jcl 依赖，它是 Log4j 2 提供的 Commons Logging 适配器。   -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-jcl</artifactId>
      <version>2.17.2</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
<!--          <version>3.0.2</version>-->
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
<!--          <version>3.8.0</version>-->
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
<!--          <version>2.22.1</version>-->
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
<!--          <version>3.0.2</version>-->
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
<!--          <version>2.5.2</version>-->
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
<!--          <version>2.8.2</version>-->
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
<!--          <version>3.7.1</version>-->
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
<!--          <version>3.0.0</version>-->
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
